name: CI Pipeline

on:
  push:
    branches:
      - test_ppl
  pull_request:
    branches:
      - test_ppl

jobs:
  ci:
    name: CI Spring Boot + MSSQL
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "Your_password123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "echo 'SELECT 1' | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Your_password123'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    env:
      DB_URL: jdbc:sqlserver://localhost:1433;databaseName=testdb
      DB_USERNAME: sa
      DB_PASSWORD: Your_password123

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Tests
        run: mvn test

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "spring-boot-app"
          format: "HTML"
          out: "dependency-check-report"

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  manual-build:
    name: Manual Jar Build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Jar
        run: mvn clean package -DskipTests

      - name: Upload Jar
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app-jar
          path: target/*.jar
