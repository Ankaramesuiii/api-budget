name: CI Pipeline

on:
  push:
    branches:
      - test_ppl
  pull_request:
    branches:
      - test_ppl
  workflow_dispatch:  # Allows triggering manual jar build

jobs:
  ci:
    name: CI Spring Boot + MSSQL
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "Ankaramesui1@1@"
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Developer"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Ankaramesui1@1@' -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 30s
          --health-retries 10
        volumes:
          - ./data:/var/opt/mssql/data

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Wait for MSSQL to be ready
        run: |
          echo "Waiting for MSSQL service to be ready..."
          for i in {1..30}; do
            if docker exec $(docker ps -q --filter "ancestor=mcr.microsoft.com/mssql/server:2019-latest") /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Ankaramesui1@1@" -Q "SELECT 1" > /dev/null 2>&1; then
              echo "MSSQL is ready!"
              break
            fi
            echo "Waiting for MSSQL... (attempt $i/30)"
            sleep 10
          done
          
          # Final verification
          docker exec $(docker ps -q --filter "ancestor=mcr.microsoft.com/mssql/server:2019-latest") /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Ankaramesui1@1@" -Q "SELECT @@VERSION"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Tests
        run: mvn test

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "spring-boot-app"
          format: "HTML"
          out: "dependency-check-report"

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  manual-build:
    name: Manual JAR Build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app-jar
          path: target/*.jar
