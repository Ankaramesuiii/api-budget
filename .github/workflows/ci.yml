name: Build, Test and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test-build-package:
    name: Test with MSSQL
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup MSSQL
        uses: potatoqualitee/mssqlsuite@v1.8
        with:
          install: sqlengine, sqlclient, sqlpackage, localdb, fulltext
          version: 2019
          sa-password: Ankaramesui1@1@
          show-log: true

      - name: Verify MSSQL
        run: sqlcmd -S localhost -U sa -P Ankaramesui1@1@ -d tempdb -Q "SELECT @@version;" -C

      - name: Create Database
        run: |
          sqlcmd -S localhost -U sa -P Ankaramesui1@1@ -Q "CREATE DATABASE pfe;" -C -N

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Tests
        run: mvn test

      - name: Package app
        run: mvn clean package -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: prod

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/*.jar

      - name: SonarCloud Analysis with Maven
        run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Ankaramesuiii_api-budget -Dsonar.organization=ankaramesuiii -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ vars.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test-build-package
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: app

      - name: Debugging - Check paths and permissions
        run: |
          echo "### Current working directory ###"
          pwd && ls $pwd
          echo "el fichier mawjoud wel la"
          if [ -f "$pwd/app/demo-0.0.1-SNAPSHOT.jar" ]; then
            echo "File app/demo-0.0.1-SNAPSHOT.jar mawjoud!"
          else
            echo "File app/demo-0.0.1-SNAPSHOT.jar does mahouch mawjoud!"
          fi
          echo -e "\n### Contents of app/ directory ###"
          ls -la app/
          echo -e "\n### Checking /home/site/wwwroot/ existence ###"
          if [ -d "/home/site/wwwroot" ]; then
            echo "/home/site/wwwroot exists!"
            echo -e "\n### Contents of /home/site/wwwroot ###"
            ls -la /home/site/wwwroot/
          else
            echo "/home/site/wwwroot does NOT exist!"
          fi
          echo -e "\n### Current user info ###"
          whoami
          id
          echo -e "\n### Environment variables ###"
          env | sort

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_56C5584D1A324EFE87BAEB7C70FA18E3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B602EB14179D4B64AA9784DEEE2AA825 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8B400E594F47481EAF235FFD617538A7 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'api-budget'
          slot-name: 'Production'
          package: 'app/demo-0.0.1-SNAPSHOT.jar'
          startup-command: 'java -Dspring.profiles.active=prod -jar /home/site/wwwroot/app.jar '
      - name: Jassen
        run: ls app/