name: CI Pipeline

on:
  push:
    branches:
      - test_ppl
  pull_request:
    branches:
      - test_ppl
  workflow_dispatch:  # Allows triggering manual jar build

env:
  SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
  DB_URL: "jdbc:sqlserver://localhost:1433;databaseName=master;encrypt=true;trustServerCertificate=true"

jobs:
  ci:
    name: CI Spring Boot + MSSQL
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: ${{ env.SA_PASSWORD }}
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Developer"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${{ env.SA_PASSWORD }}' -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 30s
          --health-retries 10
          --name mssql-ci

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify MSSQL Connection
        run: |
          for i in {1..10}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ env.SA_PASSWORD }}" -Q "SELECT 1"; then
              echo "SQL Server ready"
              break
            fi
            echo "Waiting for SQL Server... (attempt $i)"
            sleep 5
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Tests with DB
        run: mvn test -Dspring.datasource.url=${{ env.DB_URL }} -Dspring.datasource.username=sa -Dspring.datasource.password=${{ env.SA_PASSWORD }}

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "spring-boot-app"
          format: "HTML"
          out: "dependency-check-report"
          failOnError: false

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          failOnError: false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build JAR (CI)
        if: always()
        run: mvn clean package -DskipTests

      - name: Upload CI JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app-ci
          path: target/*.jar
          if-no-files-found: error

  manual-build:
    name: Manual JAR Build
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Upload Production JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app-prod
          path: target/*.jar
          if-no-files-found: error