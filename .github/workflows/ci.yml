name: Spring Boot CI Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out your code

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Set up JDK 17
          distribution: 'adoptopenjdk'  # Use AdoptOpenJDK (or you can use OpenJDK)

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Cache the Maven repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests=true  # Clean and install dependencies (skip tests during this step)

      - name: Run tests with Maven
        run: mvn test  # Run unit tests

      - name: Package with Maven
        run: mvn package -DskipTests=true  # Create the JAR file without running tests again

      # Optional: Add deployment steps (e.g., to Heroku, AWS, etc.)
      # - name: Deploy to Heroku
      #   uses: akshnz/heroku-deploy-action@v1
      #   with:
      #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

      # Optional: Add notifications if you want (e.g., Slack, Email)
      # - name: Slack Notification
      #   uses: slackapi/slack-github-action@v1.18.0
      #   with:
      #     payload: '{"text":"Build finished!"}'
