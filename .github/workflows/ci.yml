name: Build, Test and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test-with-mssql:
    name: Test with MSSQL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup MSSQL
        uses: potatoqualitee/mssqlsuite@v1.8
        with:
          install: sqlengine, sqlclient, sqlpackage, localdb, fulltext
          version: 2019
          sa-password: Ankaramesui1@1@
          show-log: true

      - name: Verify MSSQL
        run: sqlcmd -S localhost -U sa -P Ankaramesui1@1@ -d tempdb -Q "SELECT @@version;" -C

      - name: Create Database
        run: |
          sqlcmd -S localhost -U sa -P Ankaramesui1@1@ -Q "CREATE DATABASE pfe;" -C -N

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Tests
        run: mvn test

      #- name: OWASP Dependency Check
      #  uses: dependency-check/Dependency-Check_Action@main
      #  with:
     #     project: "spring-boot-app"
      #    format: "HTML"
      #    out: "dependency-check-report"
      #      # Add Java path explicitly
      #    args: --jvmargs "-Djava.home==/opt/jdk"
#

      #- name: Upload Dependency Report
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: dependency-check-report
      #    path: dependency-check-report

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=Ankaramesuiii_api-budget
            -Dsonar.organization=Ankaramesuiii
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=target
        env:
          SONAR_TOKEN: ${{ vars.SONAR_TOKEN }}

  build-deploy:
    name: Build and Deploy API
    runs-on: ubuntu-latest
    needs: test-with-mssql
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build with Maven
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar
          if-no-files-found: error